find.package(devtools)
find.package("devtools")
install.packages("devtools")
install.packages("ggplot2")
find.packages("devtools")
find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
pwd
getwd()
add2 <- function(x,y){
x+y
}
add2(3,5)
above10<- function(x){
use<-x>10
x[use]
}
above <- function(x,n){
use <-x >n
x[use]
}
x<-1:20
above(x,12)
above <- function(x,n=10){
use <-x >n
x[use]
}
above(x)
columnmean<-function(x){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i]<-mean(x[,i])
}
means
}
columnmean<-function(x, removeNA = true){
nc <- ncol(x)
means <- numeric(nc)
for (i in 1:nc){
means[i]<-mean(x[,i], na.rm = removeNA)
}
means
}
load(swirl)
packages
install.packages(swirl)
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
true == true
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!5=7
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 !=8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <-sample(10)
ints
ints > 5
which(ints>7)
any(which<0)
any(ints<0)
all(ints>0)
sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(stdev,c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x), c(8,4,0))
evaluate(function(x), c(8,4,0))
evaluate(function(x){x}, c(8,4,0))
evaluate(function(x){1}, c(8,4,0))
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("My", "name", "is", "Sarah")
submit()
mad_libs(Chicago, sparkly, pizza)
mad_libs("Chicago", "sparkly", "pizza")
submit()
submit()
"hello" %p% "student"
submit()
submit()
info()
submit()
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flasgs$orange)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
lapply(flag_colors,sum)
s
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-sapply(flags, unique)
unique_vals<-lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
unique_vals<-sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
dl<-Sys.Date()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3<- "October 17, 1986 08:24"
strptime
?strptime
strptime(t3, "%B %d, %Y %H:%M)
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units="days")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
debugSource('~/data science coursework/Lesson 3 Data/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/run_analysis.R')
library(dplyr)
